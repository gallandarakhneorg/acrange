package com.example

import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import io.sarl.core.Logging
import io.sarl.core.Schedules

agent AgentA {
	uses Logging, DefaultContextInteractions, Lifecycle, Schedules
	
	var state = AgentAState::PRESENTATION

	on Initialize {
		loggingName = occurrence.parameters.get(0).toString
		every(5000) [
			if (state != AgentAState::HAVE_PARTNER) {
				println("j'envoie un message hello")
				emit(new Message("hello"))
				this.state = AgentAState::WAIT_FOR_WELCOME
				println("j'attend en retour un message de bienvenue")
			}
		]
	}

	on Message [this.state == AgentAState::WAIT_FOR_WELCOME] {
		println("Oh! j'ai des messages!");
		if (occurrence.message == "welcome" ) {
			this.state = AgentAState::HAVE_PARTNER
			// Someone welcome me
			var a = occurrence.source
			println("Oh! j'ai un message qui dit '"
				+ occurrence.message
				+ "' en provenance de "
				+ a + " !")
			println( "c'est bon, le test est termin√©, je peux me tuer... ARRggggHHH !!!" )
			killMe
		}
	}

}