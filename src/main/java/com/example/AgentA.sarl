package com.example

import com.example.states.AgentAState
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Initialize
import io.sarl.core.Logging
import com.example.events.HelloEvent
import com.example.events.Message
import io.sarl.core.Lifecycle

agent AgentA {
	uses Logging, DefaultContextInteractions, Lifecycle
	
	var state = AgentAState::PRESENTATION

	on Initialize {
		println("Je suis " + occurrence.parameters.get(0))
		println("Je me présente")
		emit(new HelloEvent("hello"))
		println("j'envoie un message hello")
		this.state = AgentAState::WAIT_FOR_WELCOME
		println("j'attend en retour un message de bienvenue")
	}

	on Message [this.state === AgentAState::WAIT_FOR_WELCOME] {
		println("Oh! j'ai des messages!");
		if (occurrence == "welcome" ) {
			// Someone welcome me
			var a = occurrence.source
			println("Oh! j'ai un message qui dit '"
				+ occurrence.message
				+ "' en provenance de "
				+ a + " !")
			println( "c'est bon, le test est terminé, je peux me tuer... ARRggggHHH !!!" )
			killMe
		}
	}

}